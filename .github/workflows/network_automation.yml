name: Network Automation

on:
  push:
    branches: [ "main" ]
  schedule:
    - cron: "0 3 * * 1"  # Weekly at 3 AM Monday

jobs:
  configure-network:
    runs-on: [self-hosted, network-lab-runner]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Clean Python environment
        run: |
          pip uninstall -y ansible ansible-core || true
          rm -rf ~/.ansible
          rm -rf ~/.cache/pip
          pip cache purge

      - name: Install Compatible Ansible Stack
        run: |
          python -m pip install --upgrade pip
          # Install compatible versions (either Option 1 or Option 2)
          
          # Option 1: Newer stable versions (recommended)
          pip install "ansible-core==2.15.6" "ansible==8.6.0" "paramiko==3.4.0"
          
          # Option 2: If you specifically need older versions
          # pip install "ansible-core==2.12.10" "ansible==6.6.0" "paramiko==2.12.0"
          
          # Install Cisco IOS collection (multiple fallback methods)
          mkdir -p ~/.ansible/collections/ansible_collections/cisco
          ansible-galaxy collection install cisco.ios -p ~/.ansible/collections || \
          git clone https://github.com/ansible-collections/cisco.ios.git ~/.ansible/collections/ansible_collections/cisco/ios || \
          echo "Warning: Collection installation failed"

      - name: Install SSH dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: Verify environment
        run: |
          echo "### Ansible Version ###"
          ansible --version
          
          echo "### Python Paths ###"
          python -c "import sys; print('\n'.join(sys.path))"
          
          echo "### Collection Verification ###"
          ls -la ~/.ansible/collections/ansible_collections/cisco/ios
          python -c "
          try:
              from ansible.utils.collection_loader import AnsibleCollectionLoader
              print('Collection loader working')
          except Exception as e:
              print(f'Collection loader check failed: {str(e)}')
          "

      - name: Run Ansible Playbook
        env:
          ANSIBLE_CONFIG: "$GITHUB_WORKSPACE/ansible.cfg"
          ANSIBLE_USER: ${{ secrets.ANSIBLE_USER }}
          ANSIBLE_PASSWORD: ${{ secrets.ANSIBLE_PASSWORD }}
          ANSIBLE_HOST_KEY_CHECKING: "False"
          ANSIBLE_PYTHON_INTERPRETER: "auto_silent"
        run: |
          ansible-playbook -i inventory/production.yml playbooks/configure_devices.yml -vvv

      - name: Commit and Push Backups
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "coopercopper@gmail.com"
          git add backups/
          git diff-index --quiet HEAD || git commit -m "Automated backup: $(date +'%Y-%m-%d %H:%M:%S')"
          git push
